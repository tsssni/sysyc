fun @main(): i32 {
%entry:
  %ret = alloc i32
  @u = alloc i32
  @v = alloc i32
  @w = alloc i32
  @w_0 = alloc i32
  @u_0 = alloc i32
  @u_1 = alloc i32
  jump %body

%body_0:
  %0 = and 1, 0
  %1 = or 1, %0
  %2 = ne 1, 4
  %3 = eq 1, %2
  %4 = gt 4, 5
  %5 = ge %4, 1
  %6 = le %5, 4
  %7 = gt 11, %6
  %8 = sub 514, 1919
  %9 = mod 114, 80
  %10 = div 6324, %9
  %11 = mul %10, 19
  %12 = add %8, %11
  store %12, @u
  %13 = add 0, 19
  %14 = add 0, %13
  %15 = eq 0, %14
  %16 = sub 0, %15
  store %16, @v
  %17 = div 114, 19
  store %17, @w
  %18 = load @w
  %19 = gt %18, 5
  br %19, %then, %else

%then:
  %20 = mod 514, 19
  store %20, @w
  %21 = div 114, 19
  store %21, @w_0
  %22 = load @u
  %23 = load @w_0
  %24 = mul %22, %23
  store %24, @u
  jump %body_1

%else:
  jump %body_1

%body_1:
  %25 = load @w
  %26 = gt %25, 5
  br %26, %then_0, %else_0

%then_0:
  %27 = load @u
  %28 = load @v
  %29 = mul %27, %28
  store %29, @u_0
  jump %body_2

%else_0:
  %30 = load @u
  %31 = load @w
  %32 = mul %30, %31
  store %32, @u_1
  jump %body_2

%body_2:

%while_entry:
  %33 = load @u
  %34 = gt %33, 0
  br %34, %while_body, %body

%while_body:
  %35 = load @u
  %36 = sub %35, 1
  store %36, @u
  jump %while_entry

%body:
  %37 = load @w
  %38 = mul %37, 414
  jump %end

%end:
  store %38, %ret
  %39 = load %ret
  ret %39
}
